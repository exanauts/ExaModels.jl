name: build

on: [pull_request]

jobs:
  github:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
        os: [ubuntu-latest,macos-latest,windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        env:
          EXAMODELS_TEST_POCL: 1

  nvidia:
    runs-on:
      labels: cuda
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Julia
      uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia-version }}
    - name: Run tests
      env:
        EXAMODELS_TEST_CUDA: 1
        EXAMODELS_TEST_POCL: 1
      run: |
        julia --color=yes --project=./test -e '
          using Pkg
          Pkg.Registry.update()
          Pkg.develop(path=".")
          Pkg.instantiate()
          include("test/runtests.jl")'

  amd:
    runs-on: 
      labels: amdgpu
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Julia
      uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia-version }}
    - name: Run tests
      env:
        EXAMODELS_TEST_AMDGPU: 1
        EXAMODELS_TEST_POCL: 1
        JULIA_NUM_THREADS: 4
        JULIA_AMDGPU_CORE_MUST_LOAD: "1"
        JULIA_AMDGPU_HIP_MUST_LOAD: "1"
        JULIA_AMDGPU_DISABLE_ARTIFACTS: "1"
      run: |
        julia --color=yes --project=./test -e '
          using Pkg
          Pkg.Registry.update()
          Pkg.develop(path=".")
          Pkg.instantiate()
          include("test/runtests.jl")'

  intel:
    runs-on: 
      labels: oneapi
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Julia
      uses: julia-actions/setup-julia@latest
      with:
        version: ${{ matrix.julia-version }}
    - name: Run tests
      env:
        EXAMODELS_TEST_ONEAPI: 1
        EXAMODELS_TEST_POCL: 1
        OverrideDefaultFP64Settings: 1
        IGC_EnableDPEmulation: 1
      run: |
        julia --color=yes --project=./test -e '
          using Pkg
          Pkg.Registry.update()
          Pkg.develop(path=".")
          Pkg.instantiate()
          include("test/runtests.jl")'
